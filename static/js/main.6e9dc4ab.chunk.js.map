{"version":3,"sources":["component/linkBox.js","component/mainText.js","component/versionBox.js","App.js","reportWebVitals.js","index.js"],"names":["LinkBox","className","href","target","rel","class","MainText","contentArr","el","useRef","useEffect","typed","Typed","current","strings","startDelay","typeSpeed","backSpeed","backDelay","contentType","loop","showCursor","destroy","ref","VersionBox","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAWeA,EAXC,WACZ,OACA,sBAAKC,UAAU,UAAf,UACI,mBAAGC,KAAK,8CAA8CC,OAAO,SAASC,IAAI,sBAA1E,SAAgG,sBAAMC,MAAM,yBAC5G,mBAAGH,KAAK,oCAAoCC,OAAO,SAASC,IAAI,sBAAhE,SAAsF,sBAAMC,MAAM,uBAClG,mBAAGH,KAAK,6CAA6CC,OAAO,SAASC,IAAI,sBAAzE,SAA+F,sBAAMC,MAAM,8B,gBCwCpGC,EAxCE,WAEb,IAAMC,EAAW,CAAC,2CAA2C,gDAAgD,gDAAgD,kDACvJC,EAAKC,iBAAO,MA2BlB,OAzBAC,qBAAU,WACN,IAAMC,EAAQ,IAAIC,IAAMJ,EAAGK,QAAS,CAChCC,QAASP,EAETQ,WAAY,IACZC,UAAW,IACXC,UAAW,IACXC,UAAW,IACXC,YAAa,OAEbC,MAAM,EACNC,YAAY,IAQhB,OAAO,WACHV,EAAMW,aAGX,IAGC,sBAAKrB,UAAU,WAAf,UACI,2CAAa,sBAAMA,UAAU,QAAhB,6BAAb,QACA,yCAAW,sBAAMA,UAAU,GAAhB,SAAmB,sBAAMsB,IAAKf,MAAzC,OACJ,cAAC,EAAD,QC7BOgB,EAVI,WACf,OACI,sBAAKvB,UAAU,aAAf,UACI,4CACA,2CACA,6CCSGwB,MATf,WACE,OACE,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,IACE,cAAC,EAAD,QCGOyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6e9dc4ab.chunk.js","sourcesContent":["const LinkBox = () => {\r\n    return ( \r\n    <div className=\"linkbox\">\r\n        <a href=\"https://www.linkedin.com/in/balamurugan213/\" target=\"_blank\" rel=\"noopener noreferrer\"><span class=\"icon icon-linkedin\"></span></a>\r\n        <a href=\"https://github.com/balamurugan213\" target=\"_blank\" rel=\"noopener noreferrer\"><span class=\"icon icon-github\"></span></a>\r\n        <a href=\"https://www.instagram.com/balamurugan213_/\" target=\"_blank\" rel=\"noopener noreferrer\"><span class=\"icon icon-instagram\"></span></a>\r\n\r\n    </div> \r\n    );\r\n}\r\n\r\nexport default LinkBox;","import LinkBox from \"./linkBox\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport Typed from \"typed.js\";\r\nimport { useState } from \"react\";\r\n\r\nconst MainText = () => {\r\n\r\n    const contentArr=[\"<span class='oswald'> Programming</span>\",\"<span class='knewave'>Creating Origami</span>\",\"<span class='orbitron'>Developing Apps</span>\",\"<span class='monoton'>Designing  UI/UX </span>\" ];\r\n    const el = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const typed = new Typed(el.current, {\r\n            strings: contentArr, // Strings to display\r\n            // Speed settings, try diffrent values untill you get good results\r\n            startDelay: 100,\r\n            typeSpeed: 200,\r\n            backSpeed: 200,\r\n            backDelay: 100,\r\n            contentType :'html',\r\n            // smartBackspace: true,\r\n            loop: true,\r\n            showCursor: false,\r\n            // cursorChar: \"!\"\r\n            \r\n        });\r\n\r\n\r\n        \r\n         // Destropying\r\n        return () => {\r\n            typed.destroy();\r\n\r\n        };\r\n    }, []);\r\n\r\n    return ( \r\n        <div className=\"mainText\">\r\n            <h2>Hi, I am <span className='light'>Balamurugan213 </span>  </h2>\r\n            <h1>I Love <span className=''><span ref={el}></span></span> </h1>\r\n        <LinkBox></LinkBox>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainText;","const VersionBox = () => {\r\n    return (  \r\n        <div className=\"versionbox\">\r\n            <h4>UPDATED ON</h4>\r\n            <h3>Sept 2021</h3>\r\n            <h5>V.0.0.1</h5>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VersionBox;","import './App.css';\nimport MainText from './component/mainText';\nimport VersionBox from './component/versionBox';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <VersionBox></VersionBox>\n        <MainText></MainText>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}